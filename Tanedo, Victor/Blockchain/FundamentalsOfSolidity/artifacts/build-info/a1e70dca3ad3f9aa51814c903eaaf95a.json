{
	"id": "a1e70dca3ad3f9aa51814c903eaaf95a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"LogicalOperators.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract LogicalOperators {\r\n    bool public andResult;\r\n    bool public orResult;\r\n    bool public notResult;\r\n\r\n    function performLogicalOperations(bool a, bool b) public {\r\n        andResult = a && b;\r\n        orResult = a || b;\r\n        notResult = !a;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"LogicalOperators.sol": {
				"LogicalOperators": {
					"abi": [
						{
							"inputs": [],
							"name": "andResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "notResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "orResult",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "a",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "b",
									"type": "bool"
								}
							],
							"name": "performLogicalOperations",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LogicalOperators.sol\":60:328  contract LogicalOperators {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LogicalOperators.sol\":60:328  contract LogicalOperators {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x399d19df\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x796e499e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa4726a74\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf044a510\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"LogicalOperators.sol\":93:114  bool public andResult */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":148:169  bool public notResult */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":121:141  bool public orResult */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LogicalOperators.sol\":178:325  function performLogicalOperations(bool a, bool b) public {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"LogicalOperators.sol\":93:114  bool public andResult */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"LogicalOperators.sol\":148:169  bool public notResult */\n    tag_12:\n      0x00\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"LogicalOperators.sol\":121:141  bool public orResult */\n    tag_15:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"LogicalOperators.sol\":178:325  function performLogicalOperations(bool a, bool b) public {... */\n    tag_20:\n        /* \"LogicalOperators.sol\":258:259  a */\n      dup2\n        /* \"LogicalOperators.sol\":258:264  a && b */\n      dup1\n      iszero\n      tag_22\n      jumpi\n      pop\n        /* \"LogicalOperators.sol\":263:264  b */\n      dup1\n        /* \"LogicalOperators.sol\":258:264  a && b */\n    tag_22:\n        /* \"LogicalOperators.sol\":246:255  andResult */\n      0x00\n      dup1\n        /* \"LogicalOperators.sol\":246:264  andResult = a && b */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LogicalOperators.sol\":286:287  a */\n      dup2\n        /* \"LogicalOperators.sol\":286:292  a || b */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"LogicalOperators.sol\":291:292  b */\n      dup1\n        /* \"LogicalOperators.sol\":286:292  a || b */\n    tag_23:\n        /* \"LogicalOperators.sol\":275:283  orResult */\n      0x00\n      0x01\n        /* \"LogicalOperators.sol\":275:292  orResult = a || b */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LogicalOperators.sol\":316:317  a */\n      dup2\n        /* \"LogicalOperators.sol\":315:317  !a */\n      iszero\n        /* \"LogicalOperators.sol\":303:312  notResult */\n      0x00\n      0x02\n        /* \"LogicalOperators.sol\":303:317  notResult = !a */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LogicalOperators.sol\":178:325  function performLogicalOperations(bool a, bool b) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_24:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_25:\n        /* \"#utility.yul\":184:205   */\n      tag_34\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_24\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_36\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_25\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:632   */\n    tag_27:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":621:622   */\n      dup1\n        /* \"#utility.yul\":614:626   */\n      revert\n        /* \"#utility.yul\":761:877   */\n    tag_29:\n        /* \"#utility.yul\":831:852   */\n      tag_41\n        /* \"#utility.yul\":846:851   */\n      dup2\n        /* \"#utility.yul\":831:852   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":824:829   */\n      dup2\n        /* \"#utility.yul\":821:853   */\n      eq\n        /* \"#utility.yul\":811:871   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":867:868   */\n      0x00\n        /* \"#utility.yul\":864:865   */\n      dup1\n        /* \"#utility.yul\":857:869   */\n      revert\n        /* \"#utility.yul\":811:871   */\n    tag_42:\n        /* \"#utility.yul\":761:877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":883:1016   */\n    tag_30:\n        /* \"#utility.yul\":926:931   */\n      0x00\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":951:971   */\n      calldataload\n        /* \"#utility.yul\":942:971   */\n      swap1\n      pop\n        /* \"#utility.yul\":980:1010   */\n      tag_44\n        /* \"#utility.yul\":1004:1009   */\n      dup2\n        /* \"#utility.yul\":980:1010   */\n      tag_29\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":883:1016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1484   */\n    tag_19:\n        /* \"#utility.yul\":1084:1090   */\n      0x00\n        /* \"#utility.yul\":1092:1098   */\n      dup1\n        /* \"#utility.yul\":1141:1143   */\n      0x40\n        /* \"#utility.yul\":1129:1138   */\n      dup4\n        /* \"#utility.yul\":1120:1127   */\n      dup6\n        /* \"#utility.yul\":1116:1139   */\n      sub\n        /* \"#utility.yul\":1112:1144   */\n      slt\n        /* \"#utility.yul\":1109:1228   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1147:1226   */\n      tag_47\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1109:1228   */\n    tag_46:\n        /* \"#utility.yul\":1267:1268   */\n      0x00\n        /* \"#utility.yul\":1292:1342   */\n      tag_48\n        /* \"#utility.yul\":1334:1341   */\n      dup6\n        /* \"#utility.yul\":1325:1331   */\n      dup3\n        /* \"#utility.yul\":1314:1323   */\n      dup7\n        /* \"#utility.yul\":1310:1332   */\n      add\n        /* \"#utility.yul\":1292:1342   */\n      tag_30\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1282:1342   */\n      swap3\n      pop\n        /* \"#utility.yul\":1238:1352   */\n      pop\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1417:1467   */\n      tag_49\n        /* \"#utility.yul\":1459:1466   */\n      dup6\n        /* \"#utility.yul\":1450:1456   */\n      dup3\n        /* \"#utility.yul\":1439:1448   */\n      dup7\n        /* \"#utility.yul\":1435:1457   */\n      add\n        /* \"#utility.yul\":1417:1467   */\n      tag_30\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1407:1467   */\n      swap2\n      pop\n        /* \"#utility.yul\":1362:1477   */\n      pop\n        /* \"#utility.yul\":1022:1484   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201afd92b6f117c881c062c900c50132133b550a08b667168e2ac99e852c9dda1e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061023e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063399d19df14610051578063796e499e1461006f578063a4726a741461008d578063f044a510146100ab575b600080fd5b6100596100c7565b604051610066919061017c565b60405180910390f35b6100776100d8565b604051610084919061017c565b60405180910390f35b6100956100eb565b6040516100a2919061017c565b60405180910390f35b6100c560048036038101906100c091906101c8565b6100fe565b005b60008054906101000a900460ff1681565b600060029054906101000a900460ff1681565b600060019054906101000a900460ff1681565b8180156101085750805b6000806101000a81548160ff02191690831515021790555081806101295750805b600060016101000a81548160ff0219169083151502179055508115600060026101000a81548160ff0219169083151502179055505050565b60008115159050919050565b61017681610161565b82525050565b6000602082019050610191600083018461016d565b92915050565b600080fd5b6101a581610161565b81146101b057600080fd5b50565b6000813590506101c28161019c565b92915050565b600080604083850312156101df576101de610197565b5b60006101ed858286016101b3565b92505060206101fe858286016101b3565b915050925092905056fea26469706673582212201afd92b6f117c881c062c900c50132133b550a08b667168e2ac99e852c9dda1e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x399D19DF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x796E499E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xA4726A74 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF044A510 EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x108 JUMPI POP DUP1 JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP1 PUSH2 0x129 JUMPI POP DUP1 JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2 DUP2 PUSH2 0x19C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP6 DUP3 DUP7 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE DUP6 DUP3 DUP7 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE REVERT SWAP3 0xB6 CALL OR 0xC8 DUP2 0xC0 PUSH3 0xC900C5 ADD ORIGIN SGT EXTCODESIZE SSTORE EXP ADDMOD 0xB6 PUSH8 0x168E2AC99E852C9D 0xDA 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "60:268:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@andResult_3": {
									"entryPoint": 199,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@notResult_7": {
									"entryPoint": 216,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@orResult_5": {
									"entryPoint": 235,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@performLogicalOperations_32": {
									"entryPoint": 254,
									"id": 32,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_bool": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_bool": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1487:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "484:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "494:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "467:6:1",
														"type": ""
													}
												],
												"src": "434:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "621:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "614:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "515:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "727:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "744:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "747:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "737:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "737:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "638:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "801:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "855:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "864:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "867:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "857:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "857:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "857:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "824:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "846:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "831:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "831:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "821:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "821:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:40:1"
															},
															"nodeType": "YulIf",
															"src": "811:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "794:5:1",
														"type": ""
													}
												],
												"src": "761:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "932:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "942:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "964:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "951:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "942:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "980:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "980:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "910:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "918:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "926:5:1",
														"type": ""
													}
												],
												"src": "883:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:385:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1145:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1147:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1147:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1147:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1120:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1129:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1116:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1141:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:32:1"
															},
															"nodeType": "YulIf",
															"src": "1109:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1238:114:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1253:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1257:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1282:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1314:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1325:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1310:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1310:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1334:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1292:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1282:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1362:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1377:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1381:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1407:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1439:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1450:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1435:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1435:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1459:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1417:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1407:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1061:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1072:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1084:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1092:6:1",
														"type": ""
													}
												],
												"src": "1022:462:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063399d19df14610051578063796e499e1461006f578063a4726a741461008d578063f044a510146100ab575b600080fd5b6100596100c7565b604051610066919061017c565b60405180910390f35b6100776100d8565b604051610084919061017c565b60405180910390f35b6100956100eb565b6040516100a2919061017c565b60405180910390f35b6100c560048036038101906100c091906101c8565b6100fe565b005b60008054906101000a900460ff1681565b600060029054906101000a900460ff1681565b600060019054906101000a900460ff1681565b8180156101085750805b6000806101000a81548160ff02191690831515021790555081806101295750805b600060016101000a81548160ff0219169083151502179055508115600060026101000a81548160ff0219169083151502179055505050565b60008115159050919050565b61017681610161565b82525050565b6000602082019050610191600083018461016d565b92915050565b600080fd5b6101a581610161565b81146101b057600080fd5b50565b6000813590506101c28161019c565b92915050565b600080604083850312156101df576101de610197565b5b60006101ed858286016101b3565b92505060206101fe858286016101b3565b915050925092905056fea26469706673582212201afd92b6f117c881c062c900c50132133b550a08b667168e2ac99e852c9dda1e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x399D19DF EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x796E499E EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xA4726A74 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF044A510 EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x108 JUMPI POP DUP1 JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP1 PUSH2 0x129 JUMPI POP DUP1 JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 ISZERO PUSH1 0x0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x191 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 DUP2 PUSH2 0x161 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2 DUP2 PUSH2 0x19C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x197 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP6 DUP3 DUP7 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE DUP6 DUP3 DUP7 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE REVERT SWAP3 0xB6 CALL OR 0xC8 DUP2 0xC0 PUSH3 0xC900C5 ADD ORIGIN SGT EXTCODESIZE SSTORE EXP ADDMOD 0xB6 PUSH8 0x168E2AC99E852C9D 0xDA 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "60:268:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;148;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;121:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;178:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;93:21;;;;;;;;;;;;:::o;148:::-;;;;;;;;;;;;;:::o;121:20::-;;;;;;;;;;;;;:::o;178:147::-;258:1;:6;;;;;263:1;258:6;246:9;;:18;;;;;;;;;;;;;;;;;;286:1;:6;;;;291:1;286:6;275:8;;:17;;;;;;;;;;;;;;;;;;316:1;315:2;303:9;;:14;;;;;;;;;;;;;;;;;;178:147;;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:116;831:21;846:5;831:21;:::i;:::-;824:5;821:32;811:60;;867:1;864;857:12;811:60;761:116;:::o;883:133::-;926:5;964:6;951:20;942:29;;980:30;1004:5;980:30;:::i;:::-;883:133;;;;:::o;1022:462::-;1084:6;1092;1141:2;1129:9;1120:7;1116:23;1112:32;1109:119;;;1147:79;;:::i;:::-;1109:119;1267:1;1292:50;1334:7;1325:6;1314:9;1310:22;1292:50;:::i;:::-;1282:60;;1238:114;1391:2;1417:50;1459:7;1450:6;1439:9;1435:22;1417:50;:::i;:::-;1407:60;;1362:115;1022:462;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "114800",
								"executionCost": "159",
								"totalCost": "114959"
							},
							"external": {
								"andResult()": "2446",
								"notResult()": "2521",
								"orResult()": "2543",
								"performLogicalOperations(bool,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 328,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201afd92b6f117c881c062c900c50132133b550a08b667168e2ac99e852c9dda1e64736f6c63430008120033",
									".code": [
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "399D19DF"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "796E499E"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "A4726A74"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "F044A510"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 93,
											"end": 114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 148,
											"end": 169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 148,
											"end": 169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 178,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 93,
											"end": 114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 93,
											"end": 114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 148,
											"end": 169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 148,
											"end": 169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 178,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 258,
											"end": 264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 264,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 258,
											"end": 264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 246,
											"end": 264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 246,
											"end": 264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 246,
											"end": 264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 286,
											"end": 292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 292,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 275,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 275,
											"end": 292,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 275,
											"end": 292,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 275,
											"end": 292,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 275,
											"end": 292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 315,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 303,
											"end": 317,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 303,
											"end": 317,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 303,
											"end": 317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 515,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 761,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 761,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 846,
											"end": 851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 831,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 824,
											"end": 829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 821,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 811,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 811,
											"end": 871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 867,
											"end": 868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 857,
											"end": 869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 811,
											"end": 871,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 811,
											"end": 871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 761,
											"end": 877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 942,
											"end": 971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 942,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 980,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 980,
											"end": 1010,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 980,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1109,
											"end": 1228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1147,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1147,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1147,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1228,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1109,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1334,
											"end": 1341,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1292,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1342,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1417,
											"end": 1467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1417,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"LogicalOperators.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"andResult()": "399d19df",
							"notResult()": "796e499e",
							"orResult()": "a4726a74",
							"performLogicalOperations(bool,bool)": "f044a510"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"andResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"performLogicalOperations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LogicalOperators.sol\":\"LogicalOperators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LogicalOperators.sol\":{\"keccak256\":\"0x62eb53a63377e52dd9af61eebda2e599fd940ec771c2798d528e5ca273c5a86b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c2c220aaa8def320fcc06ebd032412684af1b3ccc5dbf8a7f7dcc6349842b35\",\"dweb:/ipfs/QmU4VPU8hV3xFSE1cs81AuTqpnw7K7afSysRybQN8gvaoe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "LogicalOperators.sol:LogicalOperators",
								"label": "andResult",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 5,
								"contract": "LogicalOperators.sol:LogicalOperators",
								"label": "orResult",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "LogicalOperators.sol:LogicalOperators",
								"label": "notResult",
								"offset": 2,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"LogicalOperators.sol": {
				"ast": {
					"absolutePath": "LogicalOperators.sol",
					"exportedSymbols": {
						"LogicalOperators": [
							33
						]
					},
					"id": 34,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LogicalOperators",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "LogicalOperators",
							"nameLocation": "69:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "399d19df",
									"id": 3,
									"mutability": "mutable",
									"name": "andResult",
									"nameLocation": "105:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "93:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "93:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4726a74",
									"id": 5,
									"mutability": "mutable",
									"name": "orResult",
									"nameLocation": "133:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "121:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "121:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "796e499e",
									"id": 7,
									"mutability": "mutable",
									"name": "notResult",
									"nameLocation": "160:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 33,
									"src": "148:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 6,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "148:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "235:90:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "andResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "246:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 15,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "258:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 16,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "258:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "246:18:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "orResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "275:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 21,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "286:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"id": 22,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "291:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "275:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "275:17:0"
											},
											{
												"expression": {
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 26,
														"name": "notResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "303:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "315:2:0",
														"subExpression": {
															"id": 27,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "316:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "303:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "303:14:0"
											}
										]
									},
									"functionSelector": "f044a510",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performLogicalOperations",
									"nameLocation": "187:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "217:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "212:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 8,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "212:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "220:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 10,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:16:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:0"
									},
									"scope": 33,
									"src": "178:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "60:268:0",
							"usedErrors": []
						}
					],
					"src": "33:295:0"
				},
				"id": 0
			}
		}
	}
}